/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url = "$buildDir/repo"
        }
    }
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    compile 'org.springframework:spring-webmvc:4.3.18.RELEASE'
    compile 'org.springframework:spring-web:4.3.18.RELEASE'
    compile 'org.springframework:spring-core:4.3.18.RELEASE'
	compile group: 'com.ibm', name: 'mqjms', version: '56.4'
	compile project(':model')
    compile group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
    compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    compile 'org.apache.poi:poi-ooxml:4.1.2'
    compile 'com.itextpdf:itext7-core:7.1.16'


    // Use JUnit test framework
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.0.0'
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.0')
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: "1.5.0"

    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    test {
        useJUnitPlatform()
    }

}
